{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestComplexScenario"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "9853-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608338650170, "uuid": "212acfb5-c8d5-42e4-bbab-35e5d0d3c000", "historyId": "6df5cbf7c00ce5f14b4c42d69bcd2de9", "name": "test_verification_of_pick_action", "start": 1608338564493, "fullName": "tests.complex_test.TestComplexScenario#test_verification_of_pick_action", "statusDetails": {"message": "MobileBaseError: Timed out", "trace": "self = <tests.complex_test.TestComplexScenario instance at 0x7f251f226638>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        data_logger('logger/logs/pick_action_start')\n        # Pick from table and place on table\n        result = MoveItPickAndPlace(pick_x = -0.03, pick_y = 0.96 , pick_z = 0.57,\n>                                   place_x = 0.5, place_y = 1.0 , place_z = 0.6)\n\ntests/complex_test.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/experimental_pick_place_client.py:33: in MoveItPickAndPlace\n    omni_base.go_abs(0,0,1.5708)\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/mobile_base.py:147: in go_abs\n    self._send_goal_pose_and_wait(goal, timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <hsrb_interface.mobile_base.MobileBase object at 0x7f2529d7c210>\ngoal = header: \n  seq: 0\n  stamp: \n    secs: 0\n    nsecs:         0\n  frame_id: !!pyt...ion: \n    x: 0.0\n    y: 0.0\n    z: 0.7071080798594735\n    w: 0.7071054825112363\ntimeout = 0.0\n\n    def _send_goal_pose_and_wait(self, goal, timeout=0.0):\n        self.execute(goal)\n        try:\n            if self._action_client.wait_for_result(rospy.Duration(timeout)):\n                state = self._action_client.get_state()\n                if state != actionlib.GoalStatus.SUCCEEDED:\n                    error_text = self._action_client.get_goal_status_text()\n                    msg = 'Failed to reach goal ({0})'.format(error_text)\n                    raise exceptions.MobileBaseError(msg)\n            else:\n                self._action_client.cancel_goal()\n>               raise exceptions.MobileBaseError('Timed out')\nE               MobileBaseError: Timed out\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/mobile_base.py:204: MobileBaseError"}, "attachments": [{"source": "c43c1dce-698e-45b0-b227-85e2933739d3-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "66fe9f9c-61e4-425f-93f9-d806d5942e25-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "8068d199-77b3-4da8-aad1-2ada203c6409-attachment.txt", "type": "text/plain", "name": "stderr"}]}