{"status": "failed", "description": " Checking if the position of objects changed during pick action i.e. Lucy collided with an obstacle.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "pick_test"}, {"name": "subSuite", "value": "TestPickAction"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "7945-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.pick_test"}], "stop": 1607981476993, "uuid": "a0aa2f00-5ce2-40d1-94e1-55ee17651e00", "historyId": "8b04db5b2b38afdee52d2264a3c699b8", "name": "test_collision_detection", "start": 1607981476868, "fullName": "tests.pick_test.TestPickAction#test_collision_detection", "statusDetails": {"message": "AssertionError: assert True == False\n  -True\n  +False", "trace": "self = <tests.pick_test.TestPickAction instance at 0x7fde906f5d88>\n\n    def test_collision_detection(self):\n        \"\"\" Checking if the position of objects changed during pick action i.e. Lucy collided with an obstacle.\n        \"\"\"\n        # True means no change and false means there is change.\n        x = False\n        y = False\n        z = False\n        lower_tolerance_difference, upper_tolerance_difference = log_reader_comparator('X-pos', 'pick_action_start', 'pick_action_end')\n        if lower_tolerance_difference == upper_tolerance_difference:\n            x = True\n        lower_tolerance_difference, upper_tolerance_difference = log_reader_comparator('Y-pos', 'pick_action_start', 'pick_action_end')\n        if lower_tolerance_difference == upper_tolerance_difference:\n            y = True\n        lower_tolerance_difference, upper_tolerance_difference = log_reader_comparator('Z-pos', 'pick_action_start', 'pick_action_end')\n        if lower_tolerance_difference == upper_tolerance_difference:\n            z = True\n>       assert (x or y or z) == False\nE       assert True == False\nE         -True\nE         +False\n\ntests/pick_test.py:118: AssertionError"}, "attachments": [{"source": "b5bdb13a-c745-47dc-932e-886d103cefc7-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "11343193-efbc-4683-930a-26fde65b8b6c-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "f270f5a5-fda0-4b4c-b949-e017582f3913-attachment.txt", "type": "text/plain", "name": "stderr"}]}