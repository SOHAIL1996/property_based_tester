{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestComplexScenario"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "7793-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608322765411, "uuid": "5411e4b9-df0c-4d54-abb9-81c3a71caaa8", "historyId": "6df5cbf7c00ce5f14b4c42d69bcd2de9", "name": "test_verification_of_pick_action", "start": 1608322642880, "fullName": "tests.complex_test.TestComplexScenario#test_verification_of_pick_action", "statusDetails": {"message": "TypeError: 'NoneType' object is not iterable", "trace": "self = <tests.complex_test.TestComplexScenario instance at 0x7fc8f6445e18>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        attempt = 0\n        data_logger('logger/logs/pick_action_start')\n        while attempt <= 5:\n            try:\n                # Pick from table and place on table\n                result = MoveItPickAndPlace(pick_x = 0, pick_y = 0.96 , pick_z = 0.55,\n>                                           place_x = 0.7, place_y = 1.0 , place_z = 0.6)\n\ntests/complex_test.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/pick_place_client.py:88: in __init__\n    self.pick(\"target1\", grasps)\ntests/action_client/pick_place_client.py:141: in pick\n    result = self.whole_body.pick(target, grasps)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <moveit_commander.move_group.MoveGroupCommander object at 0x7fc8f646c950>\nobject_name = 'target1', grasp = None, plan_only = False\n\n    def pick(self, object_name, grasp = [], plan_only=False):\n        \"\"\"Pick the named object. A grasp message, or a list of Grasp messages can also be specified as argument.\"\"\"\n        if type(grasp) is Grasp:\n            return self._g.pick(object_name, conversions.msg_to_string(grasp), plan_only)\n        else:\n>           return self._g.pick(object_name, [conversions.msg_to_string(x) for x in grasp], plan_only)\nE           TypeError: 'NoneType' object is not iterable\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/moveit_commander/move_group.py:557: TypeError"}, "attachments": [{"source": "855b0b54-ddc3-4b88-b897-8457a4dbddba-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "06cabcac-8abc-4d87-b67c-1e83838797a3-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "752b06ea-558d-49f5-acef-9ee4ce16aa95-attachment.txt", "type": "text/plain", "name": "stderr"}]}