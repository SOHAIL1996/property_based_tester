<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from husky.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Software License Agreement (BSD)

\file      husky.urdf.xacro
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com>, Devon Ash <dash@clearpathrobotics.com>
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="husky">
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="medium_grey">
    <color rgba="0.6 0.6 0.6 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/base_link.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0 0.061875"/>
      <geometry>
        <box size="0.9874 0.5709 0.12375"/>
      </geometry>
    </collision>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.17562499999999998"/>
      <geometry>
        <box size="0.7899200000000001 0.5709 0.10375"/>
      </geometry>
    </collision>
  </link>
  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.13228"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <!-- Inertial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <mass value="46.034"/>
      <origin xyz="-0.00065 -0.085 0.062"/>
      <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint>
  <link name="front_left_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.1651"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_left_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="front_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="front_right_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.1651"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_right_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="front_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="front_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="rear_left_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.1651"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.256 0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="rear_left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="rear_right_wheel_link">
    <inertial>
      <mass value="2.637"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02467" ixy="0" ixz="0" iyy="0.04411" iyz="0" izz="0.02467"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1143" radius="0.1651"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.256 -0.2854 0.03282"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <transmission name="rear_right_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="rear_right_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <!--
      CHASSIS: Spawn and attach default chassis.
               Currently, no customization available.
    -->
  <!-- Spawn Husky chassis -->
  <link name="top_chassis_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_chassis.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach chassis to the robot -->
  <joint name="top_chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_chassis_link"/>
  </joint>
  <link name="front_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach front bumper -->
  <joint name="front_bumper" type="fixed">
    <origin rpy="0 0 0" xyz="0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="front_bumper_link"/>
  </joint>
  <link name="rear_bumper_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/bumper.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach rear bumper -->
  <joint name="rear_bumper" type="fixed">
    <origin rpy="0 0 3.14159" xyz="-0.48 0 0.091"/>
    <parent link="base_link"/>
    <child link="rear_bumper_link"/>
  </joint>
  <!-- Spawn user rails -->
  <link name="user_rail_link">
    <visual>
      <geometry>
        <mesh filename="package://husky_description/meshes/user_rail.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Attach user rails to base link -->
  <joint name="user_rail" type="fixed">
    <origin rpy="0 0 0" xyz="0.272 0 0.245"/>
    <parent link="base_link"/>
    <child link="user_rail_link"/>
  </joint>
  <!-- Spawn default top plate -->
  <link name="top_plate_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_plate.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://husky_description/meshes/top_plate.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach default top plate -->
  <joint name="top_plate_joint" type="fixed">
    <parent link="base_link"/>
    <child link="top_plate_link"/>
    <origin rpy="0 0 0" xyz="0.0812 0 0.245"/>
  </joint>
  <!-- Default top plate front link -->
  <link name="top_plate_front_link"/>
  <joint name="top_plate_front_joint" type="fixed">
    <parent link="top_plate_link"/>
    <child link="top_plate_front_link"/>
    <origin rpy="0 0 0" xyz="0.36367 0 0.00639"/>
  </joint>
  <!-- Default top plate rear link-->
  <link name="top_plate_rear_link"/>
  <joint name="top_plate_rear_joint" type="fixed">
    <parent link="top_plate_link"/>
    <child link="top_plate_rear_link"/>
    <origin rpy="0 0 0" xyz="-0.36633 0 0.00639"/>
  </joint>
  <!--
      IMU Link: Standard location to add an IMU (i.e. UM7 or Microstrain)
  -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 -1.5708 3.1416" xyz="0.19 0 0.149"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <gazebo reference="imu_link">
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>40</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>
  <!-- This file is a placeholder which is included by default from
       husky.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the HUSKY_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
  <!-- This file is a placeholder which is included by default from
       husky.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the HUSKY_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
  
 <!-- Contact Sensor -->
 <link name="sim_collider">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="1.0 0.7 0.02"/>
      </geometry>
    </collision>
    <!-- <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <box size="1.0 0.7 0.02"/>
      </geometry>
    </visual> -->
    <!-- <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial> -->
  </link>

  <joint name="sim_collider_joint" type="fixed">
    <origin xyz="0 0 0.1" rpy="0 0 0"/>
    <parent link="base_link"/> <!-- Change param parent link -->
    <child link="sim_collider"/>   <!-- Change param same as link -->
  </joint>

  <gazebo reference="sim_collider"> <!-- Change param same as link -->
    <sensor name="sim_collider_link_contact_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <contact>
        <collision>base_link_fixed_joint_lump__sim_collider_collision_2</collision> <!-- Change param same as link -->
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="gazebo_ros_sim_collider_controller">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <frameName>world</frameName> <!-- Change param -->
        <bumperTopicName>bumper_contact_state</bumperTopicName>
      </plugin>
    </sensor>
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- Ouster Augment -->
  <link name="os1_sensor">
      <inertial>
         <mass value="0.33"/>
         <origin xyz="0 0 0.0365" rpy="0 0 0" />
         <inertia ixx="0.000241148" ixy="0" ixz="0" iyy="0.000241148" iyz="0" izz="0.000264"/>
      </inertial>
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0" /> <!-- z = 0.0365 -->
         <geometry>
 	        <cylinder radius="0.04" length="0.073"/>
         </geometry>
      </collision>
      <visual>
         <origin xyz="0 0 0.0" rpy="0 0 1.5707" />
         <geometry>
	         <mesh filename="package://ouster_description/meshes/os1_64.dae" /> 
         </geometry>
      </visual>
  </link>

  <joint name="os1_sensor_joint" type="fixed">
      <parent link="sim_collider" />
      <child link="os1_sensor" />
      <origin xyz="0.2 0.0 0.18" rpy="0 0 0" /> <!-- 0.03618 is the default height -->
  </joint>

  <!-- Ouster gazebo library -->
  <gazebo reference="os1_sensor">
        <sensor type="ray" name="os1_sensor-OS1-64">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>220</samples> <!-- 512 default-->
                <resolution>1</resolution>
                <min_angle>-3.1415926535897931</min_angle>
                <max_angle>3.1415926535897931</max_angle>
              </horizontal>
              <vertical>
                <samples>64</samples>
                <resolution>1</resolution>
                <min_angle>-0.26</min_angle>
                <max_angle>0.26</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.90</min>
              <max>75.0</max>
              <resolution>0.03</resolution>
            </range>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ouster_laser.so">
            <topicName>/points</topicName>
            <frameName>os1_sensor</frameName>
            <min_range>0.90</min_range>
            <max_range>75.0</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
        </sensor>
    </gazebo>
</robot>
