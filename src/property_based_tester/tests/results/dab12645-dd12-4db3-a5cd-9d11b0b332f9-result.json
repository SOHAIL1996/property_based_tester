{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestComplexScenario"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "14305-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608383664102, "uuid": "3b533fd4-ceed-4768-8c10-eb0822c34b15", "historyId": "6df5cbf7c00ce5f14b4c42d69bcd2de9", "name": "test_verification_of_pick_action", "start": 1608383502023, "fullName": "tests.complex_test.TestComplexScenario#test_verification_of_pick_action", "statusDetails": {"message": "FollowTrajectoryError: Playing trajectory failed: /hsrb/arm_trajectory_controller(1), /hsrb/omni_base_controller(4)", "trace": "self = <tests.complex_test.TestComplexScenario instance at 0x7fa608ba2bd8>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        data_logger('logger/logs/pick_action_start')\n        attempt = 0\n        while attempt<15:\n            try:\n                result = MoveItPickAndPlace(pick_x = -0.03, pick_y = 0.96 , pick_z = 0.56,\n>                                           place_x = 0.5, place_y = 1.0 , place_z = 0.65)\n\ntests/complex_test.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/experimental_pick_place_client.py:37: in MoveItPickAndPlace\n    geometry.pose(x=0,y=0.93,z=0.5, ek=-1.57)], ref_frame_id='odom')\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/joint_group.py:579: in move_end_effector_pose\n    self._execute_trajectory(constrained_traj)\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/joint_group.py:1040: in _execute_trajectory\n    trajectory.wait_controllers(clients)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontrollers = [<hsrb_interface.trajectory.TrajectoryController object at 0x7fa60989f690>, <hsrb_interface.trajectory.TrajectoryController object at 0x7fa608c670d0>]\n\n    def wait_controllers(controllers):\n        watch_rate = settings.get_entry('trajectory', 'watch_rate')\n        rate = rospy.Rate(watch_rate)\n        ok_set = {\n            actionlib.GoalStatus.PENDING,\n            actionlib.GoalStatus.ACTIVE,\n            actionlib.GoalStatus.SUCCEEDED,\n        }\n        try:\n            while True:\n                states = [c.get_state() for c in controllers]\n                if any(map(lambda s: s not in ok_set, states)):\n                    log = []\n                    for c in controllers:\n                        log.append(\"{0}({1})\".format(c.controller_name,\n                                                     c.get_state()))\n                        c.cancel()\n                    reason = ', '.join(log)\n                    text = \"Playing trajectory failed: {0}\".format(reason)\n>                   raise exceptions.FollowTrajectoryError(text)\nE                   FollowTrajectoryError: Playing trajectory failed: /hsrb/arm_trajectory_controller(1), /hsrb/omni_base_controller(4)\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/trajectory.py:502: FollowTrajectoryError"}, "attachments": [{"source": "13fdbc76-e894-436f-b908-a598077d5439-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "53f579c3-5bcb-4395-b11c-4b1b6e21eb83-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "63b9c858-e236-44f6-a6c7-bb8e03df1bfe-attachment.txt", "type": "text/plain", "name": "stderr"}]}