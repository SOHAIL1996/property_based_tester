{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestComplexScenario"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "19443-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608372354455, "uuid": "517eccd9-3945-4d2d-b6cc-6b136a446572", "historyId": "6df5cbf7c00ce5f14b4c42d69bcd2de9", "name": "test_verification_of_pick_action", "start": 1608372351802, "fullName": "tests.complex_test.TestComplexScenario#test_verification_of_pick_action", "statusDetails": {"message": "ResourceNotFoundError", "trace": "self = <tests.complex_test.TestComplexScenario instance at 0x7f8966085320>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        data_logger('logger/logs/pick_action_start')\n        # Pick from table and place on table\n        result = MoveItPickAndPlace(pick_x = -0.03, pick_y = 0.96 , pick_z = 0.57,\n>                                   place_x = 0.5, place_y = 1.0 , place_z = 0.6)\n\ntests/complex_test.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/experimental_pick_place_client.py:27: in MoveItPickAndPlace\n    collision_world = hsrb_interface.collision_world.CollisionWorld('')\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/collision_world.py:53: in __init__\n    self._setting = settings.get_entry('collision_world', name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsection = 'collision_world', name = ''\n\n    def get_entry(section, name):\n        \"\"\"Get an entry in robot setting dictionary.\n    \n        Args:\n            section (str): A section name.\n            name (str): A resource name.\n    \n        Returns:\n            Dict[str, JSON Data]: A corresponding settings.\n    \n        Raises:\n            hsrb_interface.exceptions.ResourceNotFoundError:\n                A resource which has name `name` does not exist.\n        \"\"\"\n        if section in _SETTINGS:\n            result = _SETTINGS[section].get(name, None)\n            if result is None:\n                msg = \"{0}({1}) is not found\".format(section, name)\n>               raise exceptions.ResourceNotFoundError()\nE               ResourceNotFoundError\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/settings.py:241: ResourceNotFoundError"}, "attachments": [{"source": "e379ab99-8d76-4eaa-bf45-52ad1fab2453-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "83cab80e-f365-49e1-a136-1bacb52edcf9-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "94f5cc8c-23d0-497f-a018-36a9878fe1f1-attachment.txt", "type": "text/plain", "name": "stderr"}]}