{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "pick_test"}, {"name": "subSuite", "value": "TestPickAction"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "26373-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.pick_test"}], "stop": 1607987367125, "uuid": "2a1772aa-c930-4ecf-87f3-e9049030e169", "historyId": "dfe1c67d4188a9f3c1ffbc72d27b2e12", "name": "test_verification_of_pick_action", "start": 1607987359896, "fullName": "tests.pick_test.TestPickAction#test_verification_of_pick_action", "statusDetails": {"message": "RuntimeError: No Trajectory execution capability available.", "trace": "self = <tests.pick_test.TestPickAction instance at 0x7f455d9cadd0>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        mo = Model('glass')\n        data_logger('logger/logs/pick_action_start')\n        hx,hy,hz = mo.lucy_pos()[0],mo.lucy_pos()[1],mo.lucy_pos()[2]\n        # result = picker_client(hx+0.65, hy, 0.5, 0.0, 0.0, 0.0)\n        # Pick from table and drop on table\n        # result = MoveItPickAndPlace( pick_x = hx+0.75, pick_y = hy, pick_z = 0.55,\n        #                              place_x = hx+0.7, place_y = hy, place_z = 0.76)\n        # Pick from table and place on shelf\n        result = MoveItPickAndPlace( pick_x = hx+0.75, pick_y = hy, pick_z = 0.55,\n>                                    place_x = 2.933, place_y = 3.107 , place_z = 0.46)\n\ntests/pick_test.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/pick_Toyota_client.py:29: in __init__\n    base = moveit_commander.MoveGroupCommander(\"base\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <moveit_commander.move_group.MoveGroupCommander object at 0x7f455da9ec50>\nname = 'base', robot_description = 'robot_description', ns = ''\n\n    def __init__(self, name, robot_description=\"robot_description\", ns=\"\"):\n        \"\"\" Specify the group name for which to construct this commander instance. Throws an exception if there is an initialization error. \"\"\"\n>       self._g = _moveit_move_group_interface.MoveGroupInterface(name, robot_description, ns)\nE       RuntimeError: No Trajectory execution capability available.\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/moveit_commander/move_group.py:52: RuntimeError"}, "attachments": [{"source": "6bdb9e7a-363f-463e-9c4d-42045c4d977c-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "25cef162-73f9-4f74-8f84-12e9e22bfea2-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "0644fafb-fa8b-435f-a796-d472ef6f1ed4-attachment.txt", "type": "text/plain", "name": "stderr"}]}