{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestComplexScenario"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "5963-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608337997307, "uuid": "390a061b-521c-4f5d-8f8f-8c962220a147", "historyId": "6df5cbf7c00ce5f14b4c42d69bcd2de9", "name": "test_verification_of_pick_action", "start": 1608337995276, "fullName": "tests.complex_test.TestComplexScenario#test_verification_of_pick_action", "statusDetails": {"message": "ResourceNotFoundError: Item collision_world is not found", "trace": "self = <tests.complex_test.TestComplexScenario instance at 0x7feb50df3908>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        data_logger('logger/logs/pick_action_start')\n        # Pick from table and place on table\n        result = MoveItPickAndPlace(pick_x = -0.03, pick_y = 0.96 , pick_z = 0.57,\n>                                   place_x = 0.5, place_y = 1.0 , place_z = 0.6)\n\ntests/complex_test.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/experimental_pick_place_client.py:24: in MoveItPickAndPlace\n    collision_world = robot.get(\"collision_world\")\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/robot.py:342: in get\n    return self._conn.get(name)\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/robot.py:186: in get\n    section, config = settings.get_entry_by_name(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nname = 'collision_world'\n\n    def get_entry_by_name(name):\n        \"\"\"Get a resource configuration by `name` from a robot setting dictionary.\n    \n        Args:\n            name (str): A target resource name.\n    \n        Returns:\n    \n    \n        Raises:\n            hsrb_interface.exceptions.ResourceNotFoundError: No such resource.\n        \"\"\"\n        for section, entries in _SETTINGS.items():\n            for key, config in entries.items():\n                if name == key:\n                    return section, config\n        msg = \"Item {0} is not found\".format(name)\n>       raise exceptions.ResourceNotFoundError(msg)\nE       ResourceNotFoundError: Item collision_world is not found\n\n/opt/ros/kinetic/lib/python2.7/dist-packages/hsrb_interface/settings.py:211: ResourceNotFoundError"}, "attachments": [{"source": "443133ea-06fa-4c8e-b77f-903d086f424f-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "e5700fc0-7519-4135-9336-e188a85f42ec-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "1db59b59-cabd-403e-a156-56db3af14e9c-attachment.txt", "type": "text/plain", "name": "stderr"}]}