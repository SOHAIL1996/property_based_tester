{"status": "broken", "description": "Initialzing parameters for testing.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "complex_test"}, {"name": "subSuite", "value": "TestPerception"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "7906-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.complex_test"}], "stop": 1608218746069, "uuid": "f052d588-cf8a-4e5b-8cd9-47a8186bc768", "historyId": "effeafc46fba316bab86f962fc856697", "name": "test_set_up", "start": 1608218746008, "fullName": "tests.complex_test.TestPerception#test_set_up", "statusDetails": {"message": "MergeError: No common columns to perform merge on. Merge options: left_on=None, right_on=None, left_index=False, right_index=False", "trace": "self = <tests.complex_test.TestPerception instance at 0x7ff68a533560>, randomizer = <function _parameters at 0x7ff68a537758>\n\n    def test_set_up(self,randomizer):\n        \"\"\"Initialzing parameters for testing.\n        \"\"\"\n        self.config = Configuration()\n>       a = self.config.config_data_frame('nav_end')\n\ntests/complex_test.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/file_reader/file_reader.py:110: in config_data_frame\n    df3 = pd.DataFrame.merge(df, df2, how=\"outer\")\n/usr/local/lib/python2.7/dist-packages/pandas/core/frame.py:6868: in merge\n    copy=copy, indicator=indicator, validate=validate)\n/usr/local/lib/python2.7/dist-packages/pandas/core/reshape/merge.py:47: in merge\n    validate=validate)\n/usr/local/lib/python2.7/dist-packages/pandas/core/reshape/merge.py:524: in __init__\n    self._validate_specification()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pandas.core.reshape.merge._MergeOperation object at 0x7ff69fd239d0>\n\n    def _validate_specification(self):\n        # Hm, any way to make this logic less complicated??\n        if self.on is None and self.left_on is None and self.right_on is None:\n    \n            if self.left_index and self.right_index:\n                self.left_on, self.right_on = (), ()\n            elif self.left_index:\n                if self.right_on is None:\n                    raise MergeError('Must pass right_on or right_index=True')\n            elif self.right_index:\n                if self.left_on is None:\n                    raise MergeError('Must pass left_on or left_index=True')\n            else:\n                # use the common columns\n                common_cols = self.left.columns.intersection(\n                    self.right.columns)\n                if len(common_cols) == 0:\n                    raise MergeError(\n                        'No common columns to perform merge on. '\n                        'Merge options: left_on={lon}, right_on={ron}, '\n                        'left_index={lidx}, right_index={ridx}'\n                        .format(lon=self.left_on, ron=self.right_on,\n>                               lidx=self.left_index, ridx=self.right_index))\nE                   MergeError: No common columns to perform merge on. Merge options: left_on=None, right_on=None, left_index=False, right_index=False\n\n/usr/local/lib/python2.7/dist-packages/pandas/core/reshape/merge.py:1033: MergeError"}, "attachments": [{"source": "90479e19-940d-44c7-8915-9affe8310c47-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "5e5d6fcf-6bd0-43ac-a823-e8b80e84dd3b-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "f1e911aa-2b29-4503-a2e8-9da1ece1ff44-attachment.txt", "type": "text/plain", "name": "stderr"}]}