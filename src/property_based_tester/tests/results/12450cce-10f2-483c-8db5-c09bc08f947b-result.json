{"status": "broken", "description": "Activating the pick action test and checking whether it was successful.\n        ", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "pick_test"}, {"name": "subSuite", "value": "TestPickAction"}, {"name": "host", "value": "Hyper-Dock"}, {"name": "thread", "value": "25172-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "tests.pick_test"}], "stop": 1607983925336, "uuid": "8f5cee78-68e7-4b68-b629-0f56f22e1b9f", "historyId": "dfe1c67d4188a9f3c1ffbc72d27b2e12", "name": "test_verification_of_pick_action", "start": 1607983797817, "fullName": "tests.pick_test.TestPickAction#test_verification_of_pick_action", "statusDetails": {"message": "KeyError: 'target1'", "trace": "self = <tests.pick_test.TestPickAction instance at 0x7f7868ae30e0>\n\n    def test_verification_of_pick_action(self):\n        \"\"\"Activating the pick action test and checking whether it was successful.\n        \"\"\"\n        mo = Model('glass')\n        data_logger('logger/logs/pick_action_start')\n        hx,hy,hz = mo.lucy_pos()[0],mo.lucy_pos()[1],mo.lucy_pos()[2]\n        # result = picker_client(hx+0.65, hy, 0.5, 0.0, 0.0, 0.0)\n        # Pick from table and drop on table\n        # result = MoveItPickAndPlace( pick_x = hx+0.75, pick_y = hy, pick_z = 0.55,\n        #                              place_x = hx+0.7, place_y = hy, place_z = 0.76)\n        # Pick from table and place on shelf\n        result = MoveItPickAndPlace( pick_x = hx+0.75, pick_y = hy, pick_z = 0.55,\n>                                    place_x = 2.933, place_y = 3.107 , place_z = 0.46)\n\ntests/pick_test.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/action_client/pick_place_client.py:85: in __init__\n    pitch=[-0.2, -0.1, 0, 0.1, 0.2])\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.action_client.pick_place_client.MoveItPickAndPlace object at 0x7f78594f75d0>\ntarget = 'target1', init = (0.707, 0.0, 0.707, 0.0)\nquality = <function <lambda> at 0x7f785939db90>, x = [-0.07], y = [0], z = [0]\nroll = [0], pitch = [-0.2, -0.1, 0, 0.1, 0.2], yaw = [0]\n\n    def make_grasps(self, target, init,\n                    quality=None,\n                    x=[0], y=[0], z=[0],\n                    roll=[0], pitch=[0], yaw=[0]):\n        poses = self.scene.get_object_poses([target])\n>       pose = poses[target]\nE       KeyError: 'target1'\n\ntests/action_client/pick_place_client.py:195: KeyError"}, "attachments": [{"source": "ea065b88-832a-48b9-bb20-bff8d6b2e6d6-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "4014c8ad-9a5f-48b2-9724-76c248319ca4-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "22ab4a35-b0b2-419f-a081-d19312314be8-attachment.txt", "type": "text/plain", "name": "stderr"}]}